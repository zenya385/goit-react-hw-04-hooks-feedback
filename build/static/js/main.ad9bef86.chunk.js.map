{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.module.css","components/App.module.css","components/statistics/Statistics.module.css","components/section/Section.module.css","components/statistics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","style","result","Number","Math","round","FeedbackOptions","options","onLeaveFeedback","s","buttons","map","item","button","name","type","onClick","Section","children","title","toUpperCase","Notification","message","initValue","App","useState","feedback","setFeedback","countTotalFeedback","page","e","prevState","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,iBCAtED,EAAOC,QAAU,CAAC,KAAO,oB,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,6B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,yB,qKCiCXC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,uCACQ,+BAAOP,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEhB,mDACoB,iCAAOK,OAAOC,KAAKC,MAAMN,IAAzB,c,gBCOXO,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKR,UAAWS,IAAEC,QAAlB,SACGH,EAAQI,KAAI,SAACC,GAAD,OACX,wBACEZ,UAAWS,IAAEI,OAEbC,KAAMF,EACNG,KAAK,SACLC,QAASR,EALX,SAOGI,GALIA,S,gBCQAK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,sBAAKnB,UAAU,UAAf,UACE,oBAAIA,UAAWC,IAAMkB,MAArB,SAA6BA,EAAMC,gBAClCF,MCOQG,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,6BAAKA,OCCLC,EAAY,CAChB5B,KAAM,EACNC,QAAS,EACTC,IAAK,GA+CQ2B,EA5CH,WACV,MAAgCC,mBAASF,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KASMC,EAAqB,WAEzB,OAD+BF,EAAvB/B,KAAuB+B,EAAjB9B,QAAiB8B,EAAR7B,KAQzB,OACE,sBAAKG,UAAWC,IAAM4B,KAAtB,UACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBArBkB,SAACsB,GACzBH,GAAY,SAACI,GAAD,mBAAC,eACRA,GADO,kBAETD,EAAEE,OAAOlB,KAAOiB,EAAUD,EAAEE,OAAOlB,MAAQ,YAqB3Cc,IACC,cAAC,EAAD,CAAST,MAAM,aAAf,SACE,cAAC,EAAD,CACExB,KAAM+B,EAAS/B,KACfC,QAAS8B,EAAS9B,QAClBC,IAAK6B,EAAS7B,IACdC,MAAO8B,IACP7B,mBAlBgB,IAAhB2B,EAAS/B,KAAciC,QAsB3B,cAAC,EAAD,CAAcN,QAAQ,0BC9C9BW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ad9bef86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__1qN-9\",\"button\":\"FeedbackOptions_button__uZEgm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1DJQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Statistics_result__1GarW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__17Qhw\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={style.result}>\n      <p>\n        Good: <span>{good}</span>\n      </p>\n      <p>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span>{bad}</span>\n      </p>\n      <p>\n        Total: <span>{total}</span>\n      </p>\n      <p>\n        PositiveFeedback: <span>{Number(Math.round(positivePercentage))}%</span>\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.buttons}>\n      {options.map((item) => (\n        <button\n          className={s.button}\n          key={item}\n          name={item}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n        >\n          {item}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Section.module.css\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <div className=\"section\">\n      <h2 className={style.title}>{title.toUpperCase()}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <h2>{message}</h2>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport style from \"./App.module.css\";\nimport Statistics from \"./statistics/Statistics\";\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\nimport Section from \"./section/Section\";\nimport Notification from \"./notification/Notification\";\n\nconst initValue = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nconst App = () => {\n  const [feedback, setFeedback] = useState(initValue);\n\n  const handleAddFeedback = (e) => {\n    setFeedback((prevState) => ({\n      ...prevState,\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    const { good, neutral, bad } = feedback;\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return (feedback.good * 100) / countTotalFeedback();\n  };\n\n  return (\n    <div className={style.page}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={handleAddFeedback}\n        />\n      </Section>\n      {countTotalFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={feedback.good}\n            neutral={feedback.neutral}\n            bad={feedback.bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}